--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: result
comment: 
- !ruby/struct:SM::Flow::P 
  body: "This is a convenience method for creating a statement, binding paramters to it, and calling execute:"
- !ruby/struct:SM::Flow::VERB 
  body: "  result = db.query( &quot;select * from foo where a=?&quot;, [5])\n  # is the same as\n  result = db.prepare( &quot;select * from foo where a=?&quot; ).execute( 5 )\n"
- !ruby/struct:SM::Flow::P 
  body: You must be sure to call <tt>close</tt> on the ResultSet instance that is returned, or you could have problems with locks on the table. If called with a block, <tt>close</tt> will be invoked implicitly when the block terminates.
full_name: SQLite3::Database#query
is_singleton: false
name: query
params: ( sql, bind_vars = [], *args ) {|result| ...}
visibility: public
