--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Register a busy handler with this database instance. When a requested resource is busy, this handler will be invoked. If the handler returns <tt>false</tt>, the operation will be aborted; otherwise, the resource will be requested again.
- !ruby/struct:SM::Flow::P 
  body: The handler will be invoked with the name of the resource that was busy, and the number of times it has been retried.
- !ruby/struct:SM::Flow::P 
  body: "See also the mutually exclusive #busy_timeout."
full_name: SQLite3::Database#busy_handler
is_singleton: false
name: busy_handler
params: |
  busy_handler { |count| ... }
  busy_handler(Class.new { def call count; end }.new)

visibility: public
