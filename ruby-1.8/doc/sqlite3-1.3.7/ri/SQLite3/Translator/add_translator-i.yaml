--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: type, value
comment: 
- !ruby/struct:SM::Flow::P 
  body: Add a new translator block, which will be invoked to process type translations to the given type. The type should be an SQL datatype, and may include parentheses (i.e., &quot;VARCHAR(30)&quot;). However, any parenthetical information is stripped off and discarded, so type translation decisions are made solely on the &quot;base&quot; type name.
- !ruby/struct:SM::Flow::P 
  body: The translator block itself should accept two parameters, &quot;type&quot; and &quot;value&quot;. In this case, the &quot;type&quot; is the full type name (including parentheses), so the block itself may include logic for changing how a type is translated based on the additional data. The &quot;value&quot; parameter is the (string) data to convert.
- !ruby/struct:SM::Flow::P 
  body: The block should return the translated value.
full_name: SQLite3::Translator#add_translator
is_singleton: false
name: add_translator
params: ( type ) {|type, value| ...}
visibility: public
